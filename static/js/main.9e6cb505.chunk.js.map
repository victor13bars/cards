{"version":3,"sources":["components/UI/Navbar/Navbar.module.css","components/UI/Paginator/Paginator.module.css","components/UI/MyModal/MyModal.module.css","components/UI/button/MyButton.module.css","components/UI/Loader/Loader.module.css","components/UI/input/MyInput.module.css","components/UI/MySelect/MySelect.module.css","components/UI/button/MyButton.jsx","api/api.js","redux/auth-reducer.js","components/UI/Navbar/Navbar.jsx","components/UI/input/MyInput.jsx","components/UI/Loader/Loader.jsx","components/ErrorMessage.jsx","pages/Login.jsx","pages/Registration.jsx","assets/images/MyPhoto.jpg","components/utils/trueDate.js","pages/Profile.jsx","pages/PasswordRecover.jsx","pages/PasswordNew.jsx","redux/pack-reducer.js","components/UI/MyModal/MyModal.jsx","components/SortButton.jsx","components/TableForPacks.jsx","components/SearchForm.jsx","components/UI/MySelect/MySelect.jsx","components/UI/Paginator/Paginator.jsx","components/utils/pagesCreator.js","redux/card-reducer.js","components/TableForCards.jsx","components/utils/getCard.js","components/routers/routers.js","pages/PacksList.jsx","pages/CardsList.jsx","pages/LearnPage.jsx","components/AppRouter.jsx","App.jsx","redux/app-reducer.js","redux/redux-store.js","index.js"],"names":["module","exports","MyButton","children","disable","props","finalClassName","classes","myButton","className","instance","axios","create","withCredentials","baseURL","authAPI","email","password","rememberMe","post","then","res","data","delete","name","avatar","put","updatedUser","packsAPI","packName","sortPacks","page","pageCount","user_id","get","params","addPackPayload","cardsPack","packId","editPackPayload","cardAPI","cardQuestion","cardsPack_id","sortCards","addCardPayload","card","id","editCardPayload","gradeAPI","grade","card_id","updatedGrade","SET_LOGIN_INFO","SET_AUTH","SET_LOADING","SET_ERROR","SET_IS_ERROR","SET_IS_CRUSER","initialState","_id","publicCardPacksCount","created","updated","isAdmin","verified","error","isError","isLoading","isCreatedUser","setLoginInfo","type","payload","setAuth","isAuth","setLoading","load","setError","setIsError","bool","editAuthMeThunk","dispatch","a","editAuthMeData","console","log","response","MyNavbar","useSelector","state","auth","useDispatch","navbar","navbar__links","navbar__links_auth","to","activeClassName","navbar__links_active","onClick","MyInput","myInput","Loader","container","loader","ErrorMessage","style","marginTop","Alert","variant","Heading","Login","action","onSubmit","e","preventDefault","form","document","forms","login","elements","value","checked","loginData","placeholder","Registration","register","registerData","trueDate","str","split","date","time","reverse","join","slice","Profile","inRef","useRef","useState","setFile","toString","edit","setEdit","newName","setNewName","src","myPhoto","onChange","target","onBlur","onDoubleClick","ref","display","accept","multiple","FormData","newFile","files","avatarUrl","window","URL","createObjectURL","current","click","PasswordRecovery","PasswordNew","SET_PACKS","SET_SEARCH_VALUE","SET_TYPE_SORT","SET_IS_MYPACKS","SET_PAGE","SET_PAGE_COUNT","cardPacks","cardsCount","cardPacksTotalCount","maxCardsCount","minCardsCount","searchValue","isMyPacks","setPacks","packs","setSearchValue","setTypeSort","typeSort","setIsMyPacks","setPage","number","setPageCount","getPacksThunk","userId","getState","packsData","createPackThunk","newCardsPack","deletePackThunk","deletePack","editPackThunk","newPackName","editCardsPack","MyModal","visible","setVisible","rootClasses","myModal","push","active","myModalContent","stopPropagation","SortButton","memo","startValue","endValue","SortUp","SortDown","TableForPacks","delModal","setDelModal","editModal","setEditModal","inputEditModal","setInputEditModal","saveId","setSaveId","history","useHistory","useCallback","SortColumnCardsUp","SortColumnCardsDown","learn","Table","striped","bordered","hover","columnName","map","el","user_name","SearchForm","searchCallBack","searchLocValue","setSearchLocValue","MySelect","options","defaultValue","mySelect","event","option","Paginator","onChangeCurPage","onChangeCurPageCount","pagesArray","totalPages","Math","ceil","pages","pagesCount","currentPage","i","createPages","page__wrapper","p","index","page__current","selectContainer","SET_CARDS","SET_SEARCH_QUESTION","SET_CARDS_TYPE_SORT","SET_CARD_PAGE","SET_CARD_PAGE_COUNT","SET_EDIT_GRADE","cards","answer","question","rating","shots","_v","cardsTotalCount","maxGrade","minGrade","packUserId","questionSearch","setCardPage","setCardPageCount","count","setCardTypeSort","sort","setEditGrade","editGrade","getCardsThunk","cardsPackId","cardsData","TableForCards","cardsArray","setQuestion","setAnswer","SortUpdatedUp","SortUpdatedDown","cardId","deleteCardThunk","editCardThunk","questionValue","answerValue","getCard","sum","reduce","acc","rand","random","newSum","privateRoutes","path","component","exact","inputModal","setInputModal","modal","setModal","setCurPageCount","setCurPage","useEffect","length","useParams","createCardThunk","color","more_id","setCard","editGradeThunk","publicRoutes","AppRouter","route","App","authMeData","rootReducer","combineReducers","app","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9e6cb505.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__3Tmog\",\"navbar__links\":\"Navbar_navbar__links__1Shcr\",\"navbar__links_auth\":\"Navbar_navbar__links_auth__3ZJyg\",\"navbar__links_active\":\"Navbar_navbar__links_active__2ZiAJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page__wrapper\":\"Paginator_page__wrapper__14WXx\",\"page\":\"Paginator_page__2IrdI\",\"page__current\":\"Paginator_page__current__1YOHS\",\"selectContainer\":\"Paginator_selectContainer__OxZBc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"MyModal_myModal__3uSbP\",\"myModalContent\":\"MyModal_myModalContent__1Hkvd\",\"active\":\"MyModal_active__2G04E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myButton\":\"MyButton_myButton__1pu-a\",\"disable\":\"MyButton_disable__1U96I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loader_container__1slN1\",\"loader\":\"Loader_loader__GZZ4_\",\"rotate\":\"Loader_rotate__1j489\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myInput\":\"MyInput_myInput__3aAA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mySelect\":\"MySelect_mySelect__1T-iG\"};","import React from 'react';\r\nimport classes from './MyButton.module.css'\r\n\r\nconst MyButton = ({children, disable, ...props}) => {\r\n    const finalClassName = `${disable ? classes.disable : classes.myButton}`\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...props}\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default MyButton;","import axios from \"axios\";\r\nimport {logoutThunk} from \"../redux/auth-reducer\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'http://localhost:7542/2.0/'\r\n})\r\n\r\nexport const authAPI = {\r\n    login(email = 'nya-admin@nya.nya', password = '1qazxcvBG', rememberMe) {\r\n        return instance.post(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/me`, {})\r\n            .then(res => res.data)\r\n    },\r\n    register(email = 'nya-admin@nya.nya', password = '1qazxcvBG') {\r\n        return instance.post(`auth/register`, {\r\n            email,\r\n            password\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n    authMe() {\r\n        return instance.post(`auth/me`, {})\r\n            .then(res => res.data)\r\n    },\r\n    editAuthMe(name, avatar) {\r\n        return instance.put(`auth/me`, {\r\n            name,\r\n            avatar\r\n        })\r\n            .then(res => res.data.updatedUser)\r\n    }\r\n}\r\n\r\nexport const packsAPI = {\r\n    getCardsPack(packName, sortPacks, page, pageCount, user_id) {\r\n        return instance.get(`cards/pack`, {\r\n            params: {\r\n                packName,\r\n                sortPacks,\r\n                page,\r\n                pageCount,\r\n                user_id\r\n            }\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n    createCardsPack(addPackPayload) {\r\n        return instance.post(`cards/pack`, {\r\n            cardsPack: addPackPayload\r\n        })\r\n\r\n            .then(res => res.data)\r\n    },\r\n    deleteCardsPack(packId) {\r\n        return instance.delete(`cards/pack?id=${packId}`)\r\n            .then(res => res.data)\r\n    },\r\n    editCardsPack(editPackPayload) {\r\n        return instance.put(`cards/pack`, {\r\n            cardsPack: editPackPayload\r\n        })\r\n            .then(res => res.data)\r\n    }\r\n\r\n}\r\n\r\nexport const cardAPI = {\r\n    getCards(cardQuestion, cardsPack_id, sortCards, page, pageCount) {\r\n        return instance.get(`cards/card`, {\r\n            params: {\r\n                cardQuestion,\r\n                cardsPack_id,\r\n                sortCards,\r\n                page,\r\n                pageCount\r\n            }\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n    createCard(addCardPayload) {\r\n        return instance.post(`cards/card`, {\r\n            card: addCardPayload\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n    deleteCard(id) {\r\n        return instance.delete(`cards/card?id=${id}`)\r\n            .then(res => res.data)\r\n    },\r\n    editCard(editCardPayload) {\r\n        return instance.put(`cards/card`, {\r\n            card: editCardPayload\r\n        })\r\n            .then(res => res.data)\r\n    }\r\n}\r\n\r\nexport const gradeAPI = {\r\n    editGrade(grade, card_id) {\r\n        return instance.put(`cards/grade`, {\r\n            grade,\r\n            card_id\r\n        })\r\n            .then(res => res.data.updatedGrade)\r\n    }\r\n}","import {authAPI} from \"../api/api\";\r\n\r\nconst SET_LOGIN_INFO = 'SET_LOGIN_INFO'\r\nconst SET_AUTH = 'SET_AUTH'\r\nconst SET_LOADING = 'SET_LOADING'\r\nconst SET_ERROR = 'SET_ERROR'\r\nconst SET_IS_ERROR = 'SET_IS_ERROR'\r\nconst SET_IS_CRUSER = 'SET_IS_CRUSER'\r\n\r\nlet initialState = {\r\n    _id: null,\r\n    email: null,\r\n    name: null,\r\n    avatar: null,\r\n    publicCardPacksCount: null,\r\n    created: null,\r\n    updated: null,\r\n    isAdmin: null,\r\n    verified: null,\r\n    rememberMe: false,\r\n    error: null,\r\n    isError: false,\r\n    isLoading: false,\r\n    isCreatedUser: false\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LOGIN_INFO:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case SET_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload\r\n            }\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload\r\n            }\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case SET_IS_ERROR:\r\n            return {\r\n                ...state,\r\n                isError: action.payload\r\n            }\r\n        case SET_IS_CRUSER:\r\n            return {\r\n                ...state,\r\n                isCreatedUser: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setLoginInfo = (data) => ({\r\n    type: SET_LOGIN_INFO,\r\n    payload: data\r\n})\r\nexport const setAuth = (isAuth) => ({type: SET_AUTH, payload: isAuth})\r\nexport const setLoading = (load) => ({type: SET_LOADING, payload: load})\r\nexport const setError = (error) => ({type: SET_ERROR, payload: error})\r\nexport const setIsError = (bool) => ({type: SET_IS_ERROR, payload: bool})\r\nexport const setIsCreatedUser = (isCreate) => ({type: SET_IS_CRUSER, payload: isCreate})\r\n\r\nexport const loginThunk = (email, password, rememberMe) => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoading(true))\r\n        let loginData = await authAPI.login(email, password, rememberMe);\r\n        dispatch(setLoginInfo(loginData))\r\n        dispatch(setAuth(true))\r\n    } catch (e) {\r\n        dispatch(setError(e.response.data.error))\r\n        dispatch(setIsError(true))\r\n    } finally {\r\n        dispatch(setLoading(false))\r\n    }\r\n\r\n}\r\n\r\nexport const logoutThunk = () => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoading(true))\r\n        let logoutData = await authAPI.logout()\r\n        dispatch(setAuth(false))\r\n    } catch (e) {\r\n        dispatch(setError(e.response.data.error))\r\n        dispatch(setIsError(true))\r\n    } finally {\r\n        dispatch(setLoading(false))\r\n    }\r\n\r\n}\r\n\r\nexport const registerThunk = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoading(true))\r\n        let registerData = await authAPI.register(email, password)\r\n        console.log(registerData)\r\n        dispatch(setIsCreatedUser(true))\r\n    } catch (e) {\r\n        console.log(e)\r\n        dispatch(setError(e.response.data.error))\r\n        dispatch(setIsError(true))\r\n    } finally {\r\n        dispatch(setLoading(false))\r\n    }\r\n}\r\n\r\nexport const authMeThunk = () => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoading(true))\r\n\r\n        let authMeData = await authAPI.authMe();\r\n        console.log(\"authMeData\", authMeData)\r\n        dispatch(setLoginInfo(authMeData))\r\n        dispatch(setAuth(true))\r\n    }\r\n    // } catch (e) {\r\n    //     dispatch(setError(e.response.data.error))\r\n    //     dispatch(setIsError(true))\r\n    // }\r\n    finally {\r\n        dispatch(setLoading(false))\r\n    }\r\n}\r\n\r\nexport const editAuthMeThunk = (name,avatar) => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoading(true))\r\n        let editAuthMeData = await authAPI.editAuthMe(name,avatar);\r\n        console.log('editAuthMeData',editAuthMeData)\r\n        dispatch(setLoginInfo(editAuthMeData))\r\n\r\n    } catch (e) {\r\n        dispatch(setError(e.response.data.error))\r\n        dispatch(setIsError(true))\r\n    } finally {\r\n        dispatch(setLoading(false))\r\n    }\r\n}","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport classes from './Navbar.module.css'\r\nimport MyButton from \"../button/MyButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logoutThunk} from \"../../../redux/auth-reducer\";\r\n\r\n\r\nconst MyNavbar = () => {\r\n    const isAuth = useSelector(state => state.auth.isAuth)\r\n    const dispatch = useDispatch()\r\n    const logout = () => {\r\n        dispatch(logoutThunk())\r\n    }\r\n\r\n    return (\r\n        <div className={classes.navbar}>\r\n            {isAuth ?\r\n                <div className={classes.navbar__links}>\r\n                    <div className={classes.navbar__links_auth}>\r\n                        <NavLink to='/profile' activeClassName={classes.navbar__links_active}>Profile</NavLink>\r\n                        <NavLink to='/packsList'  activeClassName={classes.navbar__links_active}>PacksList</NavLink>\r\n                    </div>\r\n                    <MyButton onClick={logout}>Logout</MyButton>\r\n                </div>\r\n                :\r\n                <div className={classes.navbar__links}>\r\n                    <NavLink to='/login' activeClassName={classes.navbar__links_active}>Login</NavLink>\r\n                    <NavLink to='/registration' activeClassName={classes.navbar__links_active}>Registration</NavLink>\r\n                    <NavLink to='/recovery' activeClassName={classes.navbar__links_active}>PasswordRecovery</NavLink>\r\n                    <NavLink to='/newPassword' activeClassName={classes.navbar__links_active}>NewPassword</NavLink>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyNavbar;","import React from 'react';\r\nimport classes from './MyInput.module.css'\r\nconst MyInput = (props) => {\r\n    return (\r\n        <input className={classes.myInput} {...props}/>\r\n    );\r\n};\r\n\r\nexport default MyInput;","import React from 'react';\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={classes.container}>\r\n            <h2>LOADING</h2>\r\n            <div className={classes.loader}>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst ErrorMessage = () => {\r\n    const error = useSelector(state => state.auth.error)\r\n    const isError = useSelector(state => state.auth.isError)\r\n    return (\r\n        <div style={{marginTop:\"40px\"}}>\r\n            <Alert variant=\"danger\">\r\n                <Alert.Heading>An error has occurred!</Alert.Heading>\r\n                <div className=\"errorMessage\">\r\n                    <p>\r\n                        {error}\r\n                    </p>\r\n                </div>\r\n\r\n            </Alert>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;","import React, {useEffect} from 'react';\r\nimport MyInput from \"../components/UI/input/MyInput\";\r\nimport MyButton from \"../components/UI/button/MyButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {authMeThunk, loginThunk, setLoginInfo} from \"../redux/auth-reducer\";\r\nimport {authAPI} from \"../api/api\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\nimport {BrowserRouter, Link, Redirect} from \"react-router-dom\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector(state => state.auth.isAuth)\r\n    const isLoading = useSelector(state => state.auth.isLoading)\r\n    const isError = useSelector(state => state.auth.isError)\r\n    console.log(\"LOGINNNNNN\")\r\n\r\n    const loginSubmit = (e) => {\r\n        e.preventDefault()\r\n        let form = document.forms.login.elements\r\n        dispatch(loginThunk(form.email.value, form.password.value, form.rememberMe.checked))\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <Loader/>\r\n    }\r\n    if (isError) {\r\n        return <ErrorMessage/>\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        !isAuth &&\r\n        <div className='login'>\r\n            <h2>Sign In</h2>\r\n            <form name='login' action=\"\" onSubmit={loginSubmit}>\r\n                <MyInput name='email' type='text' placeholder='Email'/>\r\n                <MyInput name='password' type='password' placeholder='Password'/>\r\n                <div className='rememberMe'>\r\n                    <h3>Remember Me</h3>\r\n                    <MyInput name='rememberMe' type='checkBox' placeholder='RememberMe'/>\r\n                </div>\r\n                <div className=\"forgot\">\r\n                    <Link to='/recovery'>Forgot Password</Link>\r\n                </div>\r\n                <MyButton disable={isLoading}>Login</MyButton>\r\n            </form>\r\n            <div className='notAccount'>\r\n                <h3>Don't have an account?</h3>\r\n                <Link to='/registration'>Sign Up</Link>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport MyInput from \"../components/UI/input/MyInput\";\r\nimport MyButton from \"../components/UI/button/MyButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {registerThunk} from \"../redux/auth-reducer\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Registration = () => {\r\n    const dispatch = useDispatch()\r\n    const isLoading = useSelector(state => state.auth.isLoading)\r\n    const isError = useSelector(state => state.auth.isError)\r\n    const isCreatedUser = useSelector(state => state.auth.isCreatedUser)\r\n    const register = (e) => {\r\n        e.preventDefault()\r\n        let form = document.forms.register.elements\r\n        dispatch(registerThunk(form.email.value, form.password.value))\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <Loader/>\r\n    }\r\n    if (isError) {\r\n        return <Redirect to='/error'/>\r\n    }\r\n    if (isCreatedUser) {\r\n        return <Redirect to='/login'/>\r\n    }\r\n    return (\r\n        <div className='register'>\r\n            <h2>Sign Up</h2>\r\n            <form name='register' action=\"\" onSubmit={register}>\r\n                <MyInput name='email' type='text' placeholder='Email'/>\r\n                <MyInput name='password' type='password' placeholder='Password'/>\r\n                {/*<MyInput type='password' placeholder='Confirm Password'/>*/}\r\n                <MyButton>Register</MyButton>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registration;","export default __webpack_public_path__ + \"static/media/MyPhoto.9ae5fa7c.jpg\";","export const trueDate = (str) => {\r\n    console.log(str)\r\n    let [date, time] = str.split('T')\r\n    date = date.split('-').reverse().join('.')\r\n    time = time.slice(0, 8)\r\n    str = date + ' - ' + time\r\n    return str\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport \"../styles/App.css\"\r\nimport myPhoto from '../assets/images/MyPhoto.jpg'\r\nimport MyButton from \"../components/UI/button/MyButton\";\r\nimport MyInput from \"../components/UI/input/MyInput\";\r\nimport {authMeThunk, editAuthMeThunk} from \"../redux/auth-reducer\";\r\nimport {trueDate} from \"../components/utils/trueDate\";\r\n\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch()\r\n    const inRef = useRef(null);\r\n    const [file, setFile] = useState()\r\n    // const [fileData, setFileData] = useState();\r\n    const avatar = useSelector(state => state.auth.avatar)\r\n    const email = useSelector(state => state.auth.email)\r\n    const name = useSelector(state => state.auth.name)\r\n    const publicCardPacksCount = useSelector(state => state.auth.publicCardPacksCount)\r\n    const created = useSelector(state => state.auth.created)\r\n    const verified = useSelector(state => state.auth.verified.toString())\r\n    const [edit, setEdit] = useState(false)\r\n    const [newName, setNewName] = useState(name)\r\n\r\n\r\n    const upload = (e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData(); // for send to back\r\n        const newFile = e.target.files && e.target.files[0];\r\n        if (newFile) {\r\n            setFile(newFile);\r\n            let avatarUrl = window.URL.createObjectURL(newFile)\r\n            // setFileURL(window.URL.createObjectURL(newFile));\r\n            // formData.append('myFile', newFile, newFile.name);\r\n            // setFileData(formData);\r\n            dispatch(editAuthMeThunk(newName, avatarUrl))\r\n        }\r\n\r\n    }\r\n    const onBlur = (e) => {\r\n        setEdit(false)\r\n        dispatch(editAuthMeThunk(newName, \"\"))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2 style={{marginTop: '20px'}}> My Profile </h2>\r\n            <div className=\"profileContainer\">\r\n                <div className='profileImg_wrapper'>\r\n                    <div className='profileImg'>\r\n                        <img  src={avatar ? avatar : myPhoto}/>\r\n                    </div>\r\n\r\n                    {!edit\r\n                        ?\r\n                        <p className='profileImg_wrapper_text'  onDoubleClick={() => setEdit(true)}>{newName} </p>\r\n                        :\r\n                        <MyInput\r\n                            value={newName}\r\n                            onChange={(e) => setNewName(e.target.value)}\r\n                            onBlur={onBlur}\r\n                        />}\r\n                        <span>Front-end Developer</span>\r\n                    <input\r\n                        ref={inRef}\r\n                        type=\"file\"\r\n                        style={{display: 'none'}}\r\n                        accept=\".jpg, .jpeg, .png\"\r\n                        multiple\r\n                        onChange={upload}\r\n                    />\r\n\r\n                    <MyButton onClick={() => inRef && inRef.current && inRef.current.click()}>Upload photo</MyButton>\r\n                    {/*<MyButton onClick={upload}>Upload photo</MyButton>*/}\r\n\r\n                </div>\r\n                <div className='profileInfo_wrapper'>\r\n                    <p>E-mail : {email}</p>\r\n                    <p>Count packs : {publicCardPacksCount}</p>\r\n                    <p>Created : {trueDate(created)}</p>\r\n                    <p>Verified : {verified}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\n\r\nconst PasswordRecovery = () => {\r\n    return (\r\n        <div>\r\n            PasswordRecovery\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PasswordRecovery;","import React from 'react';\r\n\r\nconst PasswordNew = () => {\r\n    return (\r\n        <div>\r\n            PasswordNew\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PasswordNew;","import {authAPI, packsAPI} from \"../api/api\";\r\nimport {setAuth, setError, setIsError, setLoading, setLoginInfo} from \"./auth-reducer\";\r\n\r\nconst SET_PACKS = \"SET_PACKS\"\r\nconst SET_SEARCH_VALUE = \"SET_SEARCH_VALUE\"\r\nconst SET_TYPE_SORT = \"SET_TYPE_SORT\"\r\nconst SET_IS_MYPACKS = \"SET_IS_MYPACKS\"\r\nconst SET_PAGE = \"SET_PAGE\"\r\nconst SET_PAGE_COUNT = \"SET_PAGE_COUNT\"\r\n\r\nlet initialState = {\r\n    cardPacks: [\r\n        {\r\n            _id: null,\r\n            name: null,\r\n            cardsCount: null,\r\n            created: null,\r\n            updated: null\r\n        }\r\n    ],\r\n    cardPacksTotalCount: 0,\r\n    maxCardsCount: null,\r\n    minCardsCount: null,\r\n    page: 1,\r\n    pageCount: 4,\r\n    searchValue: '',\r\n    sortPacks: '0updated',\r\n    isMyPacks: false\r\n}\r\n\r\nexport const packReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PACKS :\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                cardPacks: action.payload.cardPacks\r\n            }\r\n        case SET_SEARCH_VALUE :\r\n            return {\r\n                ...state,\r\n                searchValue: action.payload\r\n            }\r\n        case SET_TYPE_SORT:\r\n            return {\r\n                ...state,\r\n                sortPacks: action.payload\r\n            }\r\n        case SET_IS_MYPACKS:\r\n            return {\r\n                ...state,\r\n                isMyPacks: action.payload\r\n            }\r\n        case SET_PAGE:\r\n            return {\r\n                ...state,\r\n                page: action.payload\r\n            }\r\n        case SET_PAGE_COUNT:\r\n            return {\r\n                ...state,\r\n                pageCount: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setPacks = (packs) => ({type: SET_PACKS, payload: packs})\r\nexport const setSearchValue = (value) => ({type: SET_SEARCH_VALUE, payload: value})\r\nexport const setTypeSort = (typeSort) => ({type: SET_TYPE_SORT, payload: typeSort})\r\nexport const setIsMyPacks = (bool) => ({type: SET_IS_MYPACKS, payload: bool})\r\nexport const setPage = (number) => ({type: SET_PAGE, payload: number})\r\nexport const setPageCount = (number) => ({type: SET_PAGE_COUNT, payload: number})\r\n\r\nexport const getPacksThunk = (userId = '') => async (dispatch, getState) => {\r\n    const {searchValue, sortPacks, page, pageCount} = getState().packs\r\n    console.log('EEEEEEEEEEEEEEE', getState().packs)\r\n    try {\r\n        dispatch(setLoading(true))\r\n        let packsData = await packsAPI.getCardsPack(searchValue, sortPacks, page, pageCount, userId)\r\n        dispatch(setPacks(packsData))\r\n    } catch (e) {\r\n        console.log(e.response)\r\n        let error = e.response ? e.response.data.error : \"Server Error\"\r\n        dispatch(setError(error))\r\n        dispatch(setIsError(true))\r\n    } finally {\r\n        dispatch(setLoading(false))\r\n    }\r\n}\r\nexport const createPackThunk = (packName, userId) => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoading(true))\r\n        let newCardsPack = await packsAPI.createCardsPack({name: packName})\r\n        console.log(newCardsPack)\r\n        dispatch(getPacksThunk(userId))\r\n    } catch (e) {\r\n        console.log(e.response)\r\n        let error = e.response ? e.response.data.error : \"Server Error\"\r\n        dispatch(setError(error))\r\n        dispatch(setIsError(true))\r\n    } finally {\r\n        dispatch(setLoading(false))\r\n    }\r\n}\r\n\r\nexport const deletePackThunk = (packId, userId) => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoading(true))\r\n        let deletePack = await packsAPI.deleteCardsPack(packId)\r\n        console.log(deletePack)\r\n        dispatch(getPacksThunk(userId))\r\n    } catch (e) {\r\n        console.log(e.response)\r\n        let error = e.response ? e.response.data.error : \"Server Error\"\r\n        dispatch(setError(error))\r\n        dispatch(setIsError(true))\r\n    } finally {\r\n        dispatch(setLoading(false))\r\n    }\r\n}\r\n\r\nexport const editPackThunk = (packId, newPackName, userId) => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoading(true))\r\n        let editCardsPack = await packsAPI.editCardsPack({_id: packId, name: newPackName})\r\n        console.log(editCardsPack)\r\n        dispatch(getPacksThunk(userId))\r\n    } catch (e) {\r\n        console.log(e.response)\r\n        let error = e.response ? e.response.data.error : \"Server Error\"\r\n        dispatch(setError(error))\r\n        dispatch(setIsError(true))\r\n    } finally {\r\n        dispatch(setLoading(false))\r\n    }\r\n}","import React from 'react';\r\nimport classes from './MyModal.module.css'\r\n\r\nconst MyModal = ({children, visible, setVisible}) => {\r\n    const rootClasses = [classes.myModal]\r\n    if (visible) {\r\n        rootClasses.push(classes.active)\r\n    }\r\n    return (\r\n        <div className={rootClasses.join(' ')} onClick={() => setVisible(false)}>\r\n            <div className={classes.myModalContent} onClick={(e) => e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyModal;","import React, {memo} from 'react';\r\nimport MyButton from \"./UI/button/MyButton\";\r\nimport \"../styles/App.css\"\r\nimport {logoutThunk} from \"../redux/auth-reducer\";\r\n\r\n\r\nconst SortButton = memo(({typeSort, startValue, endValue, SortUp, SortDown}) => {\r\n    console.log(\"SortButton\")\r\n    return (\r\n        <div>\r\n            <MyButton\r\n                className={typeSort === startValue ? \"table_sort_btn_passive\" : \"table_sort_btn_active\"}\r\n                onClick={SortUp}\r\n            >Up</MyButton>\r\n            <MyButton\r\n                className={typeSort === endValue ? \"table_sort_btn_passive\" : \"table_sort_btn_active\"}\r\n                onClick={SortDown}\r\n            >Down</MyButton>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default SortButton;","import React, {memo, useCallback, useState} from 'react';\r\nimport \"../styles/App.css\"\r\nimport Table from \"react-bootstrap/Table\";\r\nimport MyButton from \"./UI/button/MyButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deletePackThunk, editPackThunk, getPacksThunk, setTypeSort} from \"../redux/pack-reducer\";\r\nimport MyModal from \"./UI/MyModal/MyModal\";\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport {NavLink, Redirect, useHistory} from \"react-router-dom\";\r\nimport SortButton from \"./SortButton\";\r\nimport {trueDate} from \"./utils/trueDate\";\r\nimport Loader from \"./UI/Loader/Loader\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\n\r\nconst TableForPacks = memo(() => {\r\n    const columnNameTable = [\r\n        {id: 1, columnName: 'Pack name'},\r\n        {id: 2, columnName: 'Cards'},\r\n        {id: 3, columnName: \"Last updated\"},\r\n        {id: 4, columnName: \"Created By\"},\r\n        {id: 5, columnName: \"Actions\"}\r\n    ]\r\n    const isLoading = useSelector(state => state.auth.isLoading)\r\n    const isError = useSelector(state => state.auth.isError)\r\n    const packs = useSelector(state => state.packs.cardPacks)\r\n    const dispatch = useDispatch()\r\n    const isMyPacks = useSelector(state => state.packs.isMyPacks)\r\n    const userId = useSelector(state => state.auth._id)\r\n    const sortPacks = useSelector(state => state.packs.sortPacks)\r\n    const [delModal, setDelModal] = useState(false)\r\n    const [editModal, setEditModal] = useState(false)\r\n    const [inputEditModal, setInputEditModal] = useState(\"\")\r\n    const [saveId, setSaveId] = useState(0)\r\n    const history = useHistory()\r\n    console.log(\"TableForPacks\", packs)\r\n    const delOnClickBtn = (id) => {\r\n        setDelModal(true)\r\n        setSaveId(id)\r\n    }\r\n    const delPack = () => {\r\n        if (isMyPacks) {\r\n            dispatch(deletePackThunk(saveId, userId))\r\n            setDelModal(false)\r\n        } else {\r\n            dispatch(deletePackThunk(saveId))\r\n            setDelModal(false)\r\n        }\r\n    }\r\n    const editOnClickBtn = (id, name) => {\r\n        setEditModal(true)\r\n        setInputEditModal(name)\r\n        setSaveId(id)\r\n    }\r\n    const editPack = () => {\r\n        if (isMyPacks) {\r\n            dispatch(editPackThunk(saveId, inputEditModal, userId))\r\n            setEditModal(false)\r\n            setInputEditModal('')\r\n        } else {\r\n            dispatch(editPackThunk(saveId, inputEditModal))\r\n            setEditModal(false)\r\n            setInputEditModal('')\r\n        }\r\n    }\r\n    const SortUp = useCallback(() => {\r\n        if (isMyPacks) {\r\n            dispatch(setTypeSort(\"1updated\"))\r\n            dispatch(getPacksThunk(userId))\r\n        } else {\r\n            dispatch(setTypeSort(\"1updated\"))\r\n            dispatch(getPacksThunk())\r\n        }\r\n\r\n    }, [isMyPacks])\r\n\r\n    const SortDown = useCallback(() => {\r\n        if (isMyPacks) {\r\n            dispatch(setTypeSort(\"0updated\"))\r\n            dispatch(getPacksThunk(userId))\r\n        } else {\r\n            dispatch(setTypeSort(\"0updated\"))\r\n            dispatch(getPacksThunk())\r\n        }\r\n    }, [isMyPacks])\r\n\r\n    const SortColumnCardsUp = useCallback(() => {\r\n        if (isMyPacks) {\r\n            dispatch(setTypeSort(\"1cardsCount\"))\r\n            dispatch(getPacksThunk(userId))\r\n        } else {\r\n            dispatch(setTypeSort(\"1cardsCount\"))\r\n            dispatch(getPacksThunk())\r\n        }\r\n\r\n    }, [isMyPacks])\r\n\r\n    const SortColumnCardsDown = useCallback(() => {\r\n        if (isMyPacks) {\r\n            dispatch(setTypeSort(\"0cardsCount\"))\r\n            dispatch(getPacksThunk(userId))\r\n        } else {\r\n            dispatch(setTypeSort(\"0cardsCount\"))\r\n            dispatch(getPacksThunk())\r\n        }\r\n    }, [isMyPacks])\r\n\r\n    const learn = (id) => {\r\n        history.push(`/learnPage/${id}`)\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <Loader/>\r\n    }\r\n    if (isError) {\r\n        return <ErrorMessage/>\r\n    }\r\n    return (\r\n        <div className='table_Container'>\r\n            <MyModal visible={delModal} setVisible={setDelModal}>\r\n                <h3>Delete Pack</h3>\r\n                <p>Do you really want to remove Pack?<br/>\r\n                    All cards will be excluded from this course\r\n                </p>\r\n                <div className='addNewPackModalBtn'>\r\n                    <MyButton onClick={() => setDelModal(false)}>Cancel</MyButton>\r\n                    <MyButton onClick={delPack}>Delete</MyButton>\r\n                </div>\r\n            </MyModal>\r\n\r\n            <MyModal visible={editModal} setVisible={setEditModal}>\r\n                <p>Edit Pack</p>\r\n                <MyInput value={inputEditModal} placeholder='New pack name'\r\n                         onChange={(e) => setInputEditModal(e.target.value)}/>\r\n                <div className='addNewPackModalBtn'>\r\n                    <MyButton className='addNewPackModalButton' onClick={() => setEditModal(false)}>Cancel</MyButton>\r\n                    <MyButton className='addNewPackModalButton' onClick={editPack}>Save</MyButton>\r\n                </div>\r\n            </MyModal>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                <tr>\r\n                    {columnNameTable.map(function (el) {\r\n                            if (el.columnName === \"Last updated\") {\r\n\r\n                                return <th key={el.id}>\r\n                                    {el.columnName}\r\n                                    <SortButton\r\n                                        typeSort={sortPacks}\r\n                                        startValue=\"0updated\"\r\n                                        endValue=\"1updated\"\r\n                                        SortUp={SortUp}\r\n                                        SortDown={SortDown}\r\n                                    />\r\n                                </th>\r\n                            }\r\n                            if (el.columnName === \"Cards\") {\r\n\r\n                                return <th key={el.id}>\r\n                                    {el.columnName}\r\n                                    <SortButton\r\n                                        typeSort={sortPacks}\r\n                                        startValue=\"0cardsCount\"\r\n                                        endValue=\"1cardsCount\"\r\n                                        SortUp={SortColumnCardsUp}\r\n                                        SortDown={SortColumnCardsDown}\r\n                                    />\r\n                                </th>\r\n                            }\r\n                            return <th key={el.id}><span>{el.columnName}</span></th>\r\n                        }\r\n                    )}\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {packs.map(el =>\r\n                    <tr key={el._id}>\r\n                        <td><NavLink to={`/cardsList/${el._id}`}>{el.name}</NavLink></td>\r\n                        <td>{el.cardsCount}</td>\r\n                        <td>{trueDate(el.updated)}</td>\r\n                        <td>{el.user_name}</td>\r\n                        <td>\r\n                            {el.user_id === userId ?\r\n                                <div className='table_actions_btn'>\r\n                                    <MyButton onClick={() => delOnClickBtn(el._id)}>Delete</MyButton>\r\n                                    <MyButton onClick={() => editOnClickBtn(el._id, el.name)}>Edit</MyButton>\r\n                                    <MyButton onClick={() => learn(el._id)}>Learn</MyButton>\r\n                                </div>\r\n                                :\r\n                                <div className='table_actions_btn'>\r\n                                    <MyButton onClick={() => learn(el._id)}>Learn</MyButton>\r\n                                </div>\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default TableForPacks;","import React, {useState} from 'react';\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport MyButton from \"./UI/button/MyButton\";\r\nimport '../styles/App.css'\r\n\r\nconst SearchForm = ({searchCallBack,placeholder}) => {\r\n    const [searchLocValue, setSearchLocValue] = useState(\"\")\r\n    console.log(searchLocValue)\r\n    const btnClickHandler = () => {\r\n        searchCallBack(searchLocValue)\r\n        setSearchLocValue(\"\")\r\n    }\r\n    return (\r\n        <div className='search'>\r\n            <MyInput value={searchLocValue} placeholder={placeholder}\r\n                     onChange={(e) => setSearchLocValue(e.target.value)}/>\r\n            <MyButton onClick={btnClickHandler}>Search</MyButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchForm;","import React from 'react';\r\nimport classes from \"./MySelect.module.css\"\r\n\r\nconst MySelect = ({options, defaultValue, value, onChange}) => {\r\n    return (\r\n        <select\r\n            className={classes.mySelect}\r\n            value={value}\r\n            onChange={event => onChange(event.target.value)}\r\n        >\r\n            <option value={defaultValue}>{defaultValue}</option>\r\n            {options.map(option =>\r\n                <option key={option.value} value={option.value}>{option.value}</option>\r\n            )}\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default MySelect;","import React, {memo, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createPages, getPageCount, getPagesArray} from \"../../utils/pagesCreator\";\r\nimport classes from \"./Paginator.module.css\"\r\nimport {getPacksThunk, setPage, setPageCount} from \"../../../redux/pack-reducer\";\r\nimport MySelect from \"../MySelect/MySelect\";\r\n\r\nconst Paginator = memo(({\r\n\r\n                            page,\r\n                            cardPacksTotalCount,\r\n                            pageCount, onChangeCurPage,\r\n                            onChangeCurPageCount\r\n                        }) => {\r\n    let pagesArray = []\r\n    const totalPages = Math.ceil(cardPacksTotalCount / pageCount)\r\n    createPages(pagesArray, totalPages, page)\r\n    console.log(\"PAginator\")\r\n    console.log(\"TOtal\", totalPages)\r\n    return (\r\n        <div className={classes.page__wrapper}>\r\n            {pagesArray.map((p, index) =>\r\n                <span\r\n                    key={index}\r\n                    className={page === p ? classes.page + \" \" + classes.page__current : classes.page}\r\n                    onClick={() => onChangeCurPage(p)}>\r\n                    {p}\r\n                </span>\r\n            )}\r\n            <div className={classes.selectContainer}>\r\n                <MySelect\r\n                    value={pageCount}\r\n                    onChange={onChangeCurPageCount}\r\n                    defaultValue={pageCount}\r\n                    options={[\r\n                        {value: 5},\r\n                        {value: 10},\r\n                        {value: 15}\r\n                    ]}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Paginator;","export function createPages(pages, pagesCount, currentPage) {\r\n    if (pagesCount > 10) {\r\n        if (currentPage > 5) {\r\n            for (let i = currentPage - 4; i <= currentPage + 5; i++) {\r\n                pages.push(i)\r\n                if (i == pagesCount) break\r\n            }\r\n        } else {\r\n            for (let i = 1; i <= 10; i++) {\r\n                pages.push(i)\r\n                if (i == pagesCount) break\r\n            }\r\n        }\r\n    } else {\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i)\r\n        }\r\n    }\r\n\r\n}","import {authAPI, cardAPI, gradeAPI, packsAPI} from \"../api/api\";\r\nimport {setAuth, setError, setIsError, setLoading, setLoginInfo} from \"./auth-reducer\";\r\n\r\nconst SET_CARDS = \"SET_CARDS\"\r\nconst SET_SEARCH_QUESTION = \"SET_SEARCH_QUESTION\"\r\nconst SET_CARDS_TYPE_SORT = \"SET_CARDS_TYPE_SORT\"\r\nconst SET_CARD_PAGE = \"SET_CARD_PAGE\"\r\nconst SET_CARD_PAGE_COUNT = \"SET_CARD_PAGE_COUNT\"\r\nconst SET_EDIT_GRADE = \"SET_EDIT_GRADE\"\r\n\r\nlet initialState = {\r\n    cards: [\r\n        {\r\n            answer: null,\r\n            question: null,\r\n            cardsPack_id: null,\r\n            grade: null,\r\n            rating: null,\r\n            shots: null,\r\n            type: null,\r\n            user_id: null,\r\n            created: null,\r\n            updated: null,\r\n            _v: null,\r\n            _id: null\r\n        }\r\n    ],\r\n    cardsTotalCount: null,\r\n    maxGrade: null,\r\n    minGrade: null,\r\n    page: 1,\r\n    pageCount: 4,\r\n    packUserId: null,\r\n    questionSearch: \"\",\r\n    typeSort: \"0grade\"\r\n}\r\n\r\nexport const cardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_CARDS :\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                cards: action.payload.cards\r\n            }\r\n        case SET_SEARCH_QUESTION:\r\n            return {\r\n                ...state,\r\n                questionSearch: action.payload\r\n            }\r\n        case SET_CARD_PAGE:\r\n            return {\r\n                ...state,\r\n                page: action.payload\r\n            }\r\n        case SET_CARD_PAGE_COUNT:\r\n            return {\r\n                ...state,\r\n                pageCount: action.payload\r\n            }\r\n        case SET_CARDS_TYPE_SORT:\r\n            return {\r\n                ...state,\r\n                typeSort: action.payload\r\n            }\r\n        case SET_EDIT_GRADE:\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map(card => card._id === action.payload.card_id ? {\r\n                    ...card,\r\n                    grade: action.payload.grade\r\n                } : card)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setCards = (cards) => ({type: SET_CARDS, payload: cards})\r\nexport const setSearchQuestion = (value) => ({type: SET_SEARCH_QUESTION, payload: value})\r\nexport const setCardPage = (page) => ({type: SET_CARD_PAGE, payload: page})\r\nexport const setCardPageCount = (count) => ({type: SET_CARD_PAGE_COUNT, payload: count})\r\nexport const setCardTypeSort = (sort) => ({type: SET_CARDS_TYPE_SORT, payload: sort})\r\nexport const setEditGrade = (editGrade) => ({type: SET_EDIT_GRADE, payload: editGrade})\r\n\r\nexport const getCardsThunk = (cardsPackId) => async (dispatch, getState) => {\r\n    const {questionSearch, page, pageCount, typeSort} = getState().cards\r\n    try {\r\n        dispatch(setLoading(true))\r\n        let cardsData = await cardAPI.getCards(questionSearch, cardsPackId, typeSort, page, pageCount)\r\n        dispatch(setCards(cardsData))\r\n    } catch (e) {\r\n        console.log(e.response)\r\n        let error = e.response ? e.response.data.error : \"Server Error\"\r\n        dispatch(setError(error))\r\n        dispatch(setIsError(true))\r\n    } finally {\r\n        dispatch(setLoading(false))\r\n    }\r\n}\r\nexport const createCardThunk = (answer, question, cardsPack_id) => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoading(true))\r\n        let newCard = await cardAPI.createCard({answer: answer, question: question, cardsPack_id: cardsPack_id})\r\n        dispatch(getCardsThunk(cardsPack_id))\r\n    } catch (e) {\r\n        console.log(e.response)\r\n        let error = e.response ? e.response.data.error : \"Server Error\"\r\n        dispatch(setError(error))\r\n        dispatch(setIsError(true))\r\n    } finally {\r\n        dispatch(setLoading(false))\r\n    }\r\n}\r\n\r\nexport const deleteCardThunk = (cardId, packId) => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoading(true))\r\n        let deleteCard = await cardAPI.deleteCard(cardId)\r\n        dispatch(getCardsThunk(packId))\r\n    } catch (e) {\r\n        console.log(e.response)\r\n        let error = e.response ? e.response.data.error : \"Server Error\"\r\n        dispatch(setError(error))\r\n        dispatch(setIsError(true))\r\n    } finally {\r\n        dispatch(setLoading(false))\r\n    }\r\n}\r\n\r\nexport const editCardThunk = (packId, id, question, answer) => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoading(true))\r\n        let editCards = await cardAPI.editCard({_id: id, question: question, answer: answer})\r\n        dispatch(getCardsThunk(packId))\r\n    } catch (e) {\r\n        console.log(e.response)\r\n        let error = e.response ? e.response.data.error : \"Server Error\"\r\n        dispatch(setError(error))\r\n        dispatch(setIsError(true))\r\n    } finally {\r\n        dispatch(setLoading(false))\r\n    }\r\n}\r\n\r\nexport const editGradeThunk = (grade, card_id) => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoading(true))\r\n        let editGrade = await gradeAPI.editGrade(grade, card_id)\r\n        console.log(\"editGrade\",editGrade)\r\n        dispatch(setEditGrade(editGrade))\r\n    } catch (e) {\r\n        let error = e.response ? e.response.data.error : \"Server Error\"\r\n        dispatch(setError(error))\r\n        dispatch(setIsError(true))\r\n    } finally {\r\n        dispatch(setLoading(false))\r\n    }\r\n}","import React, {useCallback, useState} from 'react';\r\nimport \"../styles/App.css\"\r\nimport Table from \"react-bootstrap/Table\";\r\nimport MyButton from \"./UI/button/MyButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport MyModal from \"./UI/MyModal/MyModal\";\r\nimport {deleteCardThunk, editCardThunk, getCardsThunk, setCardTypeSort} from \"../redux/card-reducer\";\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport SortButton from \"./SortButton\";\r\nimport {trueDate} from \"./utils/trueDate\";\r\n\r\nconst TableForCards = ({packId}) => {\r\n    const columnNameTable = [\r\n        {id: 1, columnName: 'Question'},\r\n        {id: 2, columnName: 'Answer'},\r\n        {id: 3, columnName: \"Last updated\"},\r\n        {id: 4, columnName: \"Grade\"},\r\n        {id: 5, columnName: \"Actions\"}\r\n    ]\r\n    console.log(\"packId\", packId)\r\n    const cardsArray = useSelector(state => state.cards.cards)\r\n    const dispatch = useDispatch()\r\n    const userId = useSelector(state => state.auth._id)\r\n    const typeSort = useSelector(state => state.cards.typeSort)\r\n    const [delModal, setDelModal] = useState(false)\r\n    const [editModal, setEditModal] = useState(false)\r\n    const [question, setQuestion] = useState(\"\")\r\n    const [answer, setAnswer] = useState(\"\")\r\n    const [saveId, setSaveId] = useState(0)\r\n\r\n    const delOnClickBtn = (id) => {\r\n        setDelModal(true)\r\n        setSaveId(id)\r\n    }\r\n    const delPack = () => {\r\n        dispatch(deleteCardThunk(saveId, packId))\r\n        setDelModal(false)\r\n    }\r\n    const editOnClickBtn = (id, questionValue, answerValue) => {\r\n        setEditModal(true)\r\n        setQuestion(questionValue)\r\n        setAnswer(answerValue)\r\n        setSaveId(id)\r\n    }\r\n    const editPack = () => {\r\n        dispatch(editCardThunk(packId, saveId, question, answer))\r\n        setEditModal(false)\r\n        setAnswer('')\r\n        setQuestion(\"\")\r\n    }\r\n    const SortUp = useCallback(() => {\r\n        dispatch(setCardTypeSort(\"1grade\"))\r\n        dispatch(getCardsThunk(packId))\r\n    }, [])\r\n    const SortDown = useCallback(() => {\r\n        dispatch(setCardTypeSort(\"0grade\"))\r\n        dispatch(getCardsThunk(packId))\r\n    }, [])\r\n    const SortUpdatedUp = useCallback(() => {\r\n        dispatch(setCardTypeSort(\"1updated\"))\r\n        dispatch(getCardsThunk(packId))\r\n    }, [])\r\n    const SortUpdatedDown = useCallback(() => {\r\n        dispatch(setCardTypeSort(\"0updated\"))\r\n        dispatch(getCardsThunk(packId))\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <MyModal visible={delModal} setVisible={setDelModal}>\r\n                <h3>Delete Pack</h3>\r\n                <p>Do you really want to remove Pack?</p>\r\n                <div className='addNewPackModalBtn'>\r\n                    <MyButton onClick={() => setDelModal(false)}>Cancel</MyButton>\r\n                    <MyButton onClick={delPack}>Delete</MyButton>\r\n                </div>\r\n            </MyModal>\r\n\r\n            <MyModal visible={editModal} setVisible={setEditModal}>\r\n                <p>Edit card</p>\r\n                <MyInput value={question} placeholder='Question'\r\n                         onChange={(e) => setQuestion(e.target.value)}/>\r\n                <MyInput value={answer} placeholder='Answer'\r\n                         onChange={(e) => setAnswer(e.target.value)}/>\r\n                <div className='addNewPackModalBtn'>\r\n                    <MyButton className='addNewPackModalButton' onClick={() => setEditModal(false)}>Cancel</MyButton>\r\n                    <MyButton className='addNewPackModalButton' onClick={editPack}>Save</MyButton>\r\n                </div>\r\n            </MyModal>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                <tr>\r\n                    {columnNameTable.map(function (el) {\r\n                            if (el.columnName === \"Grade\") {\r\n\r\n                                return <th key={el.id}>\r\n                                    {el.columnName}\r\n                                    <SortButton\r\n                                        typeSort={typeSort}\r\n                                        startValue=\"0grade\"\r\n                                        endValue=\"1grade\"\r\n                                        SortUp={SortUp}\r\n                                        SortDown={SortDown}\r\n                                    />\r\n                                </th>\r\n                            }\r\n                            if (el.columnName === \"Last updated\") {\r\n\r\n                                return <th key={el.id}>\r\n                                    {el.columnName}\r\n                                    <SortButton\r\n                                        typeSort={typeSort}\r\n                                        startValue=\"0updated\"\r\n                                        endValue=\"1updated\"\r\n                                        SortUp={SortUpdatedUp}\r\n                                        SortDown={SortUpdatedDown}\r\n                                    />\r\n                                </th>\r\n                            }\r\n                            return <th key={el.id}>{el.columnName}</th>\r\n                        }\r\n                    )}\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {cardsArray.map(el =>\r\n                    <tr key={el._id}>\r\n                        <td>{el.question}</td>\r\n                        <td>{el.answer}</td>\r\n                        <td>{trueDate(el.updated)}</td>\r\n                        <td>{el.grade}</td>\r\n                        <td>\r\n                            {el.user_id === userId ?\r\n                                <div className='table_actions_btn'>\r\n                                    <MyButton onClick={() => delOnClickBtn(el._id)}>Delete</MyButton>\r\n                                    <MyButton\r\n                                        onClick={() => editOnClickBtn(el._id, el.question, el.answer)}>Edit</MyButton>\r\n                                </div>\r\n                                :\r\n                                <div className='table_actions_btn'>\r\n                                    <p>No actions because this is not your pack</p>\r\n                                </div>\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableForCards;","export const getCard = (cards) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}","import {Route, Switch} from \"react-router-dom\";\r\nimport Login from \"../../pages/Login\";\r\nimport Registration from \"../../pages/Registration\";\r\nimport Profile from \"../../pages/Profile\";\r\nimport PasswordRecovery from \"../../pages/PasswordRecover\";\r\nimport PasswordNew from \"../../pages/PasswordNew\";\r\nimport PacksList from \"../../pages/PacksList\";\r\nimport CardsList from \"../../pages/CardsList\";\r\nimport LearnPage from \"../../pages/LearnPage\";\r\nimport Error from \"../../pages/Error\";\r\nimport React from \"react\";\r\n\r\nexport const privateRoutes = [\r\n    {path: '/profile', component: Profile, exact: true},\r\n    {path: '/packsList', component: PacksList, exact: true},\r\n    {path: '/cardsList/:packId', component: CardsList, exact: true},\r\n    {path: '/learnPage/:packId', component: LearnPage, exact: true}\r\n]\r\n\r\nexport const publicRoutes = [\r\n    {path: '/login', component: Login, exact: true},\r\n    {path: '/registration', component: Registration, exact: true},\r\n    {path: '/newPassword', component: PasswordNew, exact: true},\r\n    {path: '/recovery', component: PasswordRecovery, exact: true},\r\n]\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport MyButton from \"../components/UI/button/MyButton\";\r\nimport '../styles/App.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    createPackThunk,\r\n    getPacksThunk,\r\n    setIsMyPacks,\r\n    setPage,\r\n    setPageCount,\r\n    setSearchValue,\r\n    setTypeSort\r\n} from \"../redux/pack-reducer\";\r\nimport MyInput from \"../components/UI/input/MyInput\";\r\nimport TableForPacks from \"../components/TableForPacks\";\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport MyModal from \"../components/UI/MyModal/MyModal\";\r\nimport Paginator from \"../components/UI/Paginator/Paginator\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\n\r\nconst PacksList = () => {\r\n    const isLoading = useSelector(state => state.auth.isLoading)\r\n    const isError = useSelector(state => state.auth.isError)\r\n    const packs = useSelector(state => state.packs.cardPacks)\r\n    const isAuth = useSelector(state => state.auth.isAuth)\r\n    const userId = useSelector(state => state.auth._id)\r\n    const isMyPacks = useSelector(state => state.packs.isMyPacks)\r\n    const pageCount = useSelector(state => state.packs.pageCount)\r\n    const page = useSelector(state => state.packs.page)\r\n    const cardPacksTotalCount = useSelector(state => state.packs.cardPacksTotalCount)\r\n    const dispatch = useDispatch()\r\n    const [inputModal, setInputModal] = useState('')\r\n    const [modal, setModal] = useState(false)\r\n\r\n    console.log(\"PACKLIST\")\r\n    const getMyPack = () => {\r\n        dispatch(setPage(1))\r\n        dispatch(setPageCount(4))\r\n        dispatch(setTypeSort(\"0updated\"))\r\n        dispatch(getPacksThunk(userId))\r\n        dispatch(setIsMyPacks(true))\r\n    }\r\n    const getAllPack = () => {\r\n        dispatch(setPage(1))\r\n        dispatch(setPageCount(4))\r\n        dispatch(setTypeSort(\"0updated\"))\r\n        dispatch(getPacksThunk())\r\n        dispatch(setIsMyPacks(false))\r\n\r\n    }\r\n    const btnSearch = (searchLocValue) => {\r\n        if (isMyPacks) {\r\n            dispatch(setPage(1))\r\n            dispatch(setSearchValue(searchLocValue))\r\n            dispatch(getPacksThunk(userId))\r\n        } else {\r\n            dispatch(setPage(1))\r\n            dispatch(setSearchValue(searchLocValue))\r\n            dispatch(getPacksThunk())\r\n        }\r\n    }\r\n\r\n    const addNewPackOpenModal = () => {\r\n        setModal(true)\r\n    }\r\n    const addNewPackCloseModal = () => {\r\n        setModal(false)\r\n        setInputModal('')\r\n    }\r\n    const addNewPack = () => {\r\n        if (isMyPacks) {\r\n            dispatch(createPackThunk(inputModal, userId))\r\n            setModal(false)\r\n            setInputModal('')\r\n        } else {\r\n            dispatch(createPackThunk(inputModal))\r\n            setModal(false)\r\n            setInputModal('')\r\n        }\r\n    }\r\n    const setCurPageCount = useCallback((value) => {\r\n        dispatch(setPage(1))\r\n        if (isMyPacks) {\r\n            dispatch(setPageCount(value))\r\n            dispatch(getPacksThunk(userId))\r\n        } else {\r\n            dispatch(setPageCount(value))\r\n            dispatch(getPacksThunk())\r\n        }\r\n    }, [isMyPacks])\r\n\r\n    const setCurPage = useCallback((page) => {\r\n        if (isMyPacks) {\r\n            dispatch(setPage(page))\r\n            dispatch(getPacksThunk(userId))\r\n        } else {\r\n            dispatch(setPage(page))\r\n            dispatch(getPacksThunk())\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksThunk())\r\n    }, [isMyPacks])\r\n\r\n    if (isLoading) {\r\n        return <Loader/>\r\n    }\r\n    if (isError) {\r\n        return <ErrorMessage/>\r\n    }\r\n    return (\r\n        <div className='packList'>\r\n            <MyModal visible={modal} setVisible={setModal}>\r\n                <p>Add new pack</p>\r\n                <MyInput value={inputModal} placeholder='Name pack'\r\n                         onChange={(e) => setInputModal(e.target.value)}/>\r\n                <div className='addNewPackModalBtn'>\r\n                    <MyButton className='addNewPackModalButton' onClick={addNewPackCloseModal}>Cancel</MyButton>\r\n                    <MyButton className='addNewPackModalButton' onClick={addNewPack}>Save</MyButton>\r\n                </div>\r\n            </MyModal>\r\n            <div className='packListHeader'>\r\n                <h2>Packs List</h2>\r\n                <MyButton onClick={getMyPack}\r\n                          className={isMyPacks ? \"PackListBtn_active\" : \"PackListBtn_passive\"}>My</MyButton>\r\n                <MyButton onClick={getAllPack}\r\n                          className={isMyPacks ? \"PackListBtn_passive\" : \"PackListBtn_active\"}>All</MyButton>\r\n            </div>\r\n            <div className='searchAndBtn'>\r\n                <SearchForm searchCallBack={btnSearch} placeholder=\"Search name\"/>\r\n                <MyButton onClick={addNewPackOpenModal}>Add new pack</MyButton>\r\n            </div>\r\n            {packs.length > 1\r\n            && <>\r\n                <TableForPacks/>\r\n                <Paginator\r\n                    page={page}\r\n                    cardPacksTotalCount={cardPacksTotalCount}\r\n                    pageCount={pageCount}\r\n                    onChangeCurPage={setCurPage}\r\n                    onChangeCurPageCount={setCurPageCount}\r\n                />\r\n            </>\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PacksList;","import React, {useCallback, useEffect, useState} from 'react';\r\nimport \"../styles/App.css\"\r\nimport {useParams} from 'react-router-dom'\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createCardThunk, getCardsThunk, setCardPage, setCardPageCount, setSearchQuestion} from \"../redux/card-reducer\";\r\nimport TableForCards from \"../components/TableForCards\";\r\nimport MyButton from \"../components/UI/button/MyButton\";\r\nimport MyModal from \"../components/UI/MyModal/MyModal\";\r\nimport MyInput from \"../components/UI/input/MyInput\";\r\nimport Paginator from \"../components/UI/Paginator/Paginator\";\r\nimport {getPacksThunk, setPage, setPageCount} from \"../redux/pack-reducer\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\n\r\nconst CardsList = () => {\r\n    console.log(\"CardsList\")\r\n    const dispatch = useDispatch();\r\n    const {packId} = useParams();\r\n    const cardsArray = useSelector(state => state.cards.cards)\r\n    const isLoading = useSelector(state => state.auth.isLoading)\r\n    const isError = useSelector(state => state.auth.isError)\r\n    const page = useSelector(state => state.cards.page)\r\n    const pageCount = useSelector(state => state.cards.pageCount)\r\n    const cardsTotalCount = useSelector(state => state.cards.cardsTotalCount)\r\n    const [modal, setModal] = useState(false)\r\n    const [answer, setAnswer] = useState(\"\")\r\n    const [question, setQuestion] = useState(\"\")\r\n    const addNewCard = () => {\r\n        dispatch(createCardThunk(answer, question, packId))\r\n        setQuestion(\"\")\r\n        setAnswer(\"\")\r\n        setModal(false)\r\n    }\r\n    const searchCard = (question) => {\r\n        dispatch(setSearchQuestion(question))\r\n        dispatch(getCardsThunk(packId))\r\n    }\r\n    const setCurPageCount = useCallback((value) => {\r\n        dispatch(setCardPage(1))\r\n        dispatch(setCardPageCount(value))\r\n        dispatch(getCardsThunk(packId))\r\n    }, [page])\r\n\r\n    const setCurPage = useCallback((page) => {\r\n        dispatch(setCardPage(page))\r\n        dispatch(getCardsThunk(packId))\r\n    }, [page])\r\n\r\n    useEffect(() => {\r\n        dispatch(setCardPage(1))\r\n        dispatch(getCardsThunk(packId))\r\n    }, [packId])\r\n\r\n    if (isLoading) {\r\n        return <Loader/>\r\n    }\r\n    if (isError) {\r\n        return <ErrorMessage/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {cardsArray.length >= 1\r\n                ?\r\n\r\n                <div className='packList'>\r\n                    <MyModal visible={modal} setVisible={setModal}>\r\n                        <p>Add new card</p>\r\n                        <MyInput value={question} placeholder='Question'\r\n                                 onChange={(e) => setQuestion(e.target.value)}/>\r\n                        <MyInput value={answer} placeholder='Answer'\r\n                                 onChange={(e) => setAnswer(e.target.value)}/>\r\n                        <div className='addNewPackModalBtn'>\r\n                            <MyButton className='addNewPackModalButton' onClick={() => setModal(false)}>Cancel</MyButton>\r\n                            <MyButton className='addNewPackModalButton' onClick={addNewCard}>Save</MyButton>\r\n                        </div>\r\n                    </MyModal>\r\n                    <div className='packListHeader'>\r\n                        <h2>Cards List</h2>\r\n                    </div>\r\n                    <div className='searchAndBtn'>\r\n                        <SearchForm searchCallBack={searchCard} placeholder=\"search for questions\"/>\r\n                        <MyButton onClick={() => setModal(true)}>Add new card</MyButton>\r\n                    </div>\r\n                    <TableForCards packId={packId}/>\r\n                    <Paginator\r\n                        page={page}\r\n                        cardPacksTotalCount={cardsTotalCount}\r\n                        pageCount={pageCount}\r\n                        onChangeCurPage={setCurPage}\r\n                        onChangeCurPageCount={setCurPageCount}\r\n                    />\r\n                    }\r\n\r\n                </div>\r\n                :\r\n                <div><h2 style={{marginTop: \"20px\", color: \"red\"}}>There are no cards in this pack!</h2></div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CardsList;","import React, {useEffect, useState} from 'react';\r\nimport \"../styles/App.css\"\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {editGradeThunk, getCardsThunk, setCardPageCount} from \"../redux/card-reducer\";\r\nimport MyButton from \"../components/UI/button/MyButton\";\r\nimport {getCard} from \"../components/utils/getCard\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\n\r\nconst LearnPage = () => {\r\n    const dispatch = useDispatch()\r\n    const {packId} = useParams();\r\n    const cards = useSelector(state => state.cards.cards)\r\n    const isLoading = useSelector(state => state.auth.isLoading)\r\n    const isError = useSelector(state => state.auth.isError)\r\n    console.log(\"cards\",cards)\r\n    const [card, setCard] = useState({\r\n        _id: 'fake',\r\n        cardsPack_id: '',\r\n\r\n        answer: 'answer fake',\r\n        question: 'question fake',\r\n        grade: 0,\r\n        shots: 0,\r\n\r\n        type: '',\r\n        rating: 0,\r\n        more_id: '',\r\n\r\n        created: '',\r\n        updated: '',\r\n    })\r\n    console.log(\"card\",card)\r\n  const cardsTotalCount = useSelector(state => state.cards.cardsTotalCount)\r\n    console.log(\"cardsTotalCount\",cardsTotalCount)\r\n    const [answer, setAnswer] = useState(false)\r\n    const grades = ['Did not know', 'Forgot', 'A lot of thought', 'Confused', 'Knew the answer'];\r\n    const nextCard = () => {\r\n        setCard(getCard(cards))\r\n        setAnswer(false)\r\n    }\r\n    const grade = (grade) => {\r\n        dispatch(editGradeThunk(grade, card._id))\r\n        setAnswer(false)\r\n        console.log(grade)\r\n    }\r\n    useEffect(() => {\r\n        dispatch(setCardPageCount(1000))\r\n        dispatch(getCardsThunk(packId))\r\n        return ()=>{\r\n            dispatch(setCardPageCount(4))\r\n        }\r\n\r\n    }, [])\r\n    useEffect(()=>{\r\n        setCard(getCard(cards));\r\n    },[])\r\n\r\n    if (isLoading) {\r\n        return <Loader/>\r\n    }\r\n    if (isError) {\r\n        return <Redirect to='/error'/>\r\n    }\r\n\r\n    return (\r\n        <div className='learn_Page'>\r\n            <div className='packListHeader'>\r\n                <h2>Learn Page</h2>\r\n            </div>\r\n            {cards.length <=0  ?\r\n                <div>\r\n                    <h2 style={{color:'red'}}>There are no cards in this pack</h2>\r\n                </div>\r\n                :\r\n                <div className='questionContainer'>\r\n                    <h2 style={{color:'darkred'}}>Question: {card.question}</h2>\r\n                    <div className=\"doubleBtn\">\r\n                        <MyButton onClick={() => setAnswer(true)}>Show Answer</MyButton>\r\n                        <MyButton onClick={nextCard}>Next Question</MyButton>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            {answer && <div className='questionContainer'>\r\n                <h2>Answer: {card.answer}</h2>\r\n                <h2 style={{color:'darkred'}}>Rate yourself: </h2>\r\n                <div className='rateBtns'>\r\n                    {grades.map((el, i) => <div key={i} className=\"rateBtn\">\r\n                        <MyButton onClick={() => grade(i + 1)}>{el}</MyButton>\r\n                    </div>)}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LearnPage;","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {privateRoutes, publicRoutes} from \"./routers/routers\";\r\n\r\nconst AppRouter = () => {\r\n    const isAuth = useSelector(state => state.auth.isAuth)\r\n\r\n    return (\r\n        isAuth\r\n            ?\r\n            <Switch>\r\n                {privateRoutes.map(route =>\r\n                    <Route\r\n                        component={route.component}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        key={route.path}\r\n                    />\r\n                )}\r\n                <Redirect to='/profile'/>\r\n            </Switch>\r\n            :\r\n            <Switch>\r\n                {publicRoutes.map(route =>\r\n                    <Route\r\n                        component={route.component}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        key={route.path}\r\n                    />\r\n                )}\r\n                <Redirect to='/login'/>\r\n            </Switch>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, {useEffect} from \"react\";\nimport Navbar from \"./components/UI/Navbar/Navbar\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport AppRouter from \"./components/AppRouter\";\nimport {authMeThunk} from \"./redux/auth-reducer\";\nimport MyNavbar from \"./components/UI/Navbar/Navbar\";\n\nfunction App() {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(authMeThunk())\n    }, [])\n    return (\n        <BrowserRouter>\n            <MyNavbar/>\n            <AppRouter/>\n            {/*{!isAuth && <Redirect to='/login'/>}*/}\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","let initialState = {}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}","import {appReducer} from \"./app-reducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {packReducer} from \"./pack-reducer\";\r\nimport {cardReducer} from \"./card-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    app:appReducer,\r\n    auth:authReducer,\r\n    packs:packReducer,\r\n    cards:cardReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/App.css';\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/redux-store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}